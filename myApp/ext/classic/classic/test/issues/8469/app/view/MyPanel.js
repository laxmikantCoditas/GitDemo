/*
 * File: app/view/MyPanel.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyPanel', {
    extend: 'Ext.panel.Panel',

    height: 405,
    width: 587,
    title: 'My Panel',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            listeners: {
                afterrender: {
                    fn: me.onPanelAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onPanelAfterRender: function(abstractcomponent, options) {
        // declare a shortcut variable to our rendered panel
        var me = abstractcomponent;


        // Create our delayed task to track movement
        me.moveTask = new Ext.util.DelayedTask(function(){
            alert('container has moved');
        });




        // Create our Resizer container on the fly
        var szrContainer = Ext.create('Ext.container.Container', {
            width: 200,
            height: 200,
            floating: false,
            draggable: true
        });




        // Add an event handler to create our resizer
        // This has to be done after the render of our Resizer container
        szrContainer.on('afterrender', function(cmp) {

            resizer = Ext.create('Ext.resizer.Resizer', {
                target: cmp,
                handles: 'all',
                minWidth: 20,
                minHeight: 20,
                maxWidth: 400,
                maxHeight: 400,
                pinned: true,
                dynamic: false
            });

            // Add a handler to test if the resize is firing
            resizer.on('resize', function(resizer, width, height, e, eOpts) {

                alert('resize'); 
            });

        }, this);


        // Add a move handler to fire when the Resizer container has been moved and it has been longer than 1/2 second
        szrContainer.on('move', function(container, x, y, eOpts) {
            me.moveTask.delay(500);

        });


        // Add our dynamically created container to the main Panel
        me.add(szrContainer);




        // Make sure we show our container
        szrContainer.show();

    }

});