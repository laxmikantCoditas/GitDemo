<project name="testreporter" default=".help">
    <!--
    This file should never be checked in to source control. It is the file you use to
    locally override build properties. Use with caution.
    -->
    <property file="local.properties"/>
    <property file="../local.properties"/>
    
    <property name="build.dir" location="../.build"/>
    <property name="tools.dir" location="../tools"/>
    <property name="tools.build.dir" location="${tools.dir}/build"/>

    <!-- Import Sencha Ant tools -->
    <property name="sencha-ant.dir" location="${tools.build.dir}"/>
    <property name="sencha-temp.dir" location="${build.dir}/temp"/>
    <import file="${sencha-ant.dir}/sencha-ant.xml"/>

    <macrodef name="replaceStringWithRegExp">  
       <attribute name="string"/>  
       <attribute name="searchPattern"/>  
       <attribute name="replacementPattern"/>  
       <attribute name="property"/>  
       <sequential>  
         <tokens id="id">  
            <concat>  
              <string value="@{string}"/>  
              <filterchain>  
                 <tokenfilter>  
                    <replaceregex pattern="@{searchPattern}"   
                                  replace="@{replacementPattern}"   
                                  flags="g"/>  
                 </tokenfilter>  
              </filterchain>  
            </concat>  
          </tokens>  
          <property name="@{property}" value="${toString:id}"/>  
       </sequential>  
    </macrodef>  

  <!--
    Initialize just the properties.
    -->
    <target name="init">
        <!-- Now the default property values -->
        <property file="build.properties"/>
        <property name="base.dir" location="."/>
        
        
    



        <!--
        Grab all environment vars as "env.VAR"

        Jenkins defines these variables for us:

        Variable	Description
        BUILD_NUMBER	The current build number, such as "153"
        BUILD_ID	The current build id, such as "2005-08-22_23-59-59" (YYYY-MM-DD_hh-mm-ss)
        BUILD_URL       The URL where the results of this build can be found (e.g. http://buildserver/jenkins/job/MyJobName/666/)
        JOB_NAME	Name of the project of this build. This is the name you gave your job when you first set it up. It's the third column of the Jenkins Dashboard main page.
        BUILD_TAG	String of jenkins-${JOBNAME}-${BUILD_NUMBER}. Convenient to put into a resource file, a jar file, etc for easier identification.
        JENKINS_URL	Set to the URL of the Jenkins master that's running the build. This value is used by Jenkins CLI for example
        EXECUTOR_NUMBER	The unique number that identifies the current executor (among executors of the same machine) that's carrying out this build. This is the number you see in the "build executor status", except that the number starts from 0, not 1.
        JAVA_HOME	If your job is configured to use a specific JDK, this variable is set to the JAVA_HOME of the specified JDK. When this variable is set, PATH is also updated to have $JAVA_HOME/bin.
        WORKSPACE	The absolute path of the workspace.
        SVN_REVISION	For Subversion-based projects, this variable contains the revision number of the module. If you have more than one module specified, this won't be set.
        CVS_BRANCH	For CVS-based projects, this variable contains the branch of the module. If CVS is configured to check out the trunk, this environment variable will not be set.
        GIT_COMMIT      For Git-based projects, this variable contains the Gitish of the commit checked out for the build
        GIT_BRANCH      For Git-based projects, this variable contains the Git branch that was checked out for the build (normally master)
        -->
        <property environment="env"/>
        
        <property name="jasmine.src" value="${base.dir}/src"/>
                        
        <property name="jasmine.files_list" value="
                                              ${jasmine.src}/lib/jasmine/src/base.js,
                                              ${jasmine.src}/jasmine-more/base-more.js,
                                              ${jasmine.src}/lib/jasmine/src/util.js,
                                              ${jasmine.src}/lib/jasmine/src/Env.js,
                                              ${jasmine.src}/jasmine-more/Env-more.js,
                                              ${jasmine.src}/lib/jasmine/src/Reporter.js,
                                              ${jasmine.src}/lib/jasmine/src/Block.js,
                                              ${jasmine.src}/lib/jasmine/src/JsApiReporter.js,
                                              ${jasmine.src}/lib/jasmine/src/Matchers.js,
                                              ${jasmine.src}/jasmine-more/Matchers-more.js,
                                              ${jasmine.src}/jasmine-more/MultiReporter.js,
                                              ${jasmine.src}/jasmine-more/PhantomJsReporter.js,
                                              ${jasmine.src}/jasmine-more/EyeReporter.js,
                                              ${jasmine.src}/lib/jasmine/src/NestedResults.js,
                                              ${jasmine.src}/lib/jasmine/src/PrettyPrinter.js,
                                              ${jasmine.src}/shared/PrettyPrinter-more.js,
                                              ${jasmine.src}/lib/jasmine/src/Queue.js,
                                              ${jasmine.src}/lib/jasmine/src/Runner.js,
                                              ${jasmine.src}/jasmine-more/Runner-more.js,
                                              ${jasmine.src}/lib/jasmine/src/Spec.js,
                                              ${jasmine.src}/jasmine-more/Spec-more.js,
                                              ${jasmine.src}/lib/jasmine/src/Suite.js,
                                              ${jasmine.src}/jasmine-more/Suite-more.js,
                                              ${jasmine.src}/lib/jasmine/src/WaitsBlock.js,
                                              ${jasmine.src}/lib/jasmine/src/WaitsForBlock.js,
                                              ${jasmine.src}/lib/jasmine/src/mock-timeout.js,
                                              ${jasmine.src}/shared/browser.js,
                                              ${jasmine.src}/shared/array.js,
                                              ${jasmine.src}/shared/Dom.js,
                                              ${jasmine.src}/jasmine-more/EventUtils.js,
                                              ${jasmine.src}/stubs/FakeScope.js,
                                              ${jasmine.src}/stubs/MockAjax.js
                                             "/>

        <property name="jasmine.output" value="${base.dir}/build/jasmine.js"/>

        <replaceStringWithRegExp string="${jasmine.files_list}"   
                         searchPattern="\s"   
                         replacementPattern=""   
                         property="jasmine.files"/>  
        
                        
        <property name="reporter.files_list" value="${jasmine.src}/reporter/Namespace.js,
                                             ${jasmine.src}/lib/jasmine/src/base.js,
                                             ${jasmine.src}/lib/jasmine/src/util.js,
                                             ${jasmine.src}/lib/jasmine/src/PrettyPrinter.js,
                                             ${jasmine.src}/shared/PrettyPrinter-more.js,
                                             ${jasmine.src}/shared/browser.js,
                                             ${jasmine.src}/shared/array.js,
                                             ${jasmine.src}/shared/Dom.js,
                                             ${jasmine.src}/reporter/Options.js,
                                             ${jasmine.src}/reporter/SandBox.js,
                                             ${jasmine.src}/reporter/CodeHighLighter.js,
                                             ${jasmine.src}/reporter/BadGlobals.js,
                                             ${jasmine.src}/reporter/jsCoverage.js,
                                             ${jasmine.src}/reporter/panel/Namespace.js,
                                             ${jasmine.src}/reporter/panel/Blocks.js,
                                             ${jasmine.src}/reporter/panel/Sandbox.js,
                                             ${jasmine.src}/reporter/panel/Infos.js,
                                             ${jasmine.src}/reporter/panel/jsCoverage.js,
                                             ${jasmine.src}/reporter/panel/jsCoverageSummary.js,
                                             ${jasmine.src}/reporter/panel/StackTrace.js,
                                             ${jasmine.src}/reporter/panel/TabPanel.js,
                                             ${jasmine.src}/reporter/panel/TreeGrid.js,
                                             ${jasmine.src}/reporter/Reporter.js
                                             "/>

        <property name="reporter.output" value="${base.dir}/build/reporter.js"/>

        <replaceStringWithRegExp string="${reporter.files_list}"   
                         searchPattern="\s"   
                         replacementPattern=""   
                         property="reporter.files"/> 
    </target>
    
    <target name="init-all" depends="init, init-sencha">
        <!-- Ensure the build and dist dirs exist -->
        <mkdir dir="${build.dir}"/>
    </target>
    
    <target name="jasmine" depends="init-all">
        <delete file="${jasmine.output}"/>
        <x-sencha-command>
            fs
                concatenate 
                    -f=${jasmine.files} 
                    -t=${jasmine.output}
        </x-sencha-command>
    </target>
   
    <target name="reporter" depends="init-all">
        <delete file="${reporter.output}"/>
        <x-sencha-command>
            fs
                concatenate 
                    -f=${reporter.files} 
                    -t=${reporter.output}
        </x-sencha-command>
    </target>
         
    <target name="compile" depends="jasmine,reporter" />
    
</project>
